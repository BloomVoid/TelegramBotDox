import security.bucket
import time 

async def procces_dox(dp):
    @dp.callback_query_handler(text_startswith='number')
    async def search(call: security.bucket.types.CallbackQuery):
        await call.answer()
        text = '''
üéÉ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –¥–∞–Ω–Ω—ã–µ —Ç–∞–∫–∏–µ –∫–∞–∫ üéÉ
üîç –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ 
üîç –ü–æ—á—Ç–∞ 
üîç –ò–º—è
üîç –°—Ç—Ä–∞–Ω–∏—á–∫–∞ –≤ vk 
üîç –°—Ç—Ä–∞–Ω–∏—á–∫–∞ –≤ Instagram
'''
        await call.message.edit_text(text)


import security.bucket
import asyncio

async def procces_dox(dp):
    @dp.message_handler(commands='dox')
    async def dox(message: security.bucket.types.Message):
        text = '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞–π—Ç–∏'
        await message.answer(text)

    @dp.message_handler(content_types='text')
    async def handle_text(message: security.bucket.types.Message):
        search_text = message.text
        file_path = 'dox.txt'
        results = await find_data_by_text(file_path, search_text)

        if results:
            text = "–î–∞–Ω–Ω—ã–µ –∫–æ—Ç–æ—Ä—ã–µ –±—ã–ª–∏ –Ω–∞–π–¥–µ–Ω—ã üìù:\n" + "\n".join(results)
        else:
            text = "–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ."

        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å—Ç–∞—Ç—É—Å–æ–≤ –≤–æ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–∏
        sent_message = await message.answer('–ü–æ–∏—Å–∫ –¥–∞–Ω–Ω—ã—Ö ‚Ä¶')
        await asyncio.sleep(1)
        await sent_message.edit_text('–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö ‚Ä¶')
        await asyncio.sleep(1)
        await sent_message.edit_text('bzzzzzzzz')
        await asyncio.sleep(1)
        await sent_message.edit_text(text)

async def find_data_by_text(file_path, search_text):
    try:
        matching_lines = []
        with open(file_path, 'r', encoding='utf-8') as file:
            for line in file:
                if search_text.lower() in line.lower():
                    matching_lines.append(line.strip())

        return matching_lines
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞:", e)
        return None